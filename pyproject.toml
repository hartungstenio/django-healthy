[build-system]
build-backend = "hatchling.build"
requires = ["hatch-vcs", "hatchling"]

[project]
name = "django-healthy"
dynamic = ["version"]
description = "Simple health checking for django applications"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = ["django"]
authors = [
  { name = "Christian Hartung", email = "hartung@live.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Web Environment",
  "Framework :: Django",
  "Framework :: Django :: 4.2",
  "Framework :: Django :: 5.0",
  "Framework :: Django :: 5.1",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Internet :: WWW/HTTP",
  "Topic :: System :: Monitoring",
]
dependencies = [
  "asgiref>=3.3",
  "django>=4.2",
  "typing-extensions; python_version<'3.10'",
]

[project.urls]
Documentation = "https://github.com/hartungstenio/django-healthy#readme"
Issues = "https://github.com/hartungstenio/django-healthy/issues"
Source = "https://github.com/hartungstenio/django-healthy"

[tool.coverage.run]
branch = true
parallel = true
source_pkgs = ["django_healthy", "tests"]

[tool.coverage.paths]
healthy = ["*/django-healthy/src/django_healthy", "src/django_healthy"]
tests = ["*/django-healthy/tests", "tests"]

[tool.coverage.report]
exclude_lines = [
  "if TYPE_CHECKING:",
  "if __name__ == .__main__.:",
  "no cov",
]

[tool.deptry]
known_first_party = ["django_healthy"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "testproj.settings"
asyncio_default_fixture_loop_scope = "function"
pythonpath = [".", "src"]

[tool.hatch.build.targets.wheel]
sources = ["src"]

[tool.hatch.build.targets.sdist]
exclude = ["/.devcontainer", "/.github"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "faker",
  "pytest",
  "pytest-asyncio",
  "pytest-django",
]

[tool.hatch.envs.default.scripts]
cov = [
  "cov-report",
  "test-cov",
]
cov-report = [
  "- coverage combine",
  "coverage report",
]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"

[[tool.hatch.envs.all.matrix]]
python = ["3.10", "3.11", "3.12", "3.13", "3.8", "3.9"]

[tool.hatch.envs.style]
dependencies = ["deptry", "pre-commit"]
detached = true

[tool.hatch.envs.style.scripts]
check = [
  "deps",
  "lint",
]
deps = "deptry ."
lint = "pre-commit run -a -v"
update = "pre-commit autoupdate"

[tool.hatch.envs.tests.overrides]
matrix.django.dependencies = [
  { value = "django>=4.2,<5.0", if = ["4.2"] },
  { value = "django>=5.0,<5.1", if = ["5.0"] },
  { value = "django>=5.1,<5.2", if = ["5.1"] },
]

[[tool.hatch.envs.tests.matrix]]
django = ["4.2"]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[[tool.hatch.envs.tests.matrix]]
django = ["5.0"]
python = ["3.10", "3.11", "3.12"]

[[tool.hatch.envs.tests.matrix]]
django = ["5.1"]
python = ["3.10", "3.11", "3.12", "3.13"]

[tool.hatch.envs.types]
dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/django_healthy tests}"

[tool.hatch.envs.hatch-static-analysis]
config-path = "ruff_defaults.toml"
dependencies = ["ruff==0.9.3"]

[[tool.mypy.overrides]]
module = "django_healthy.migrations.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "django.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pytest.*"
ignore_missing_imports = true

[tool.ruff]
extend = "ruff_defaults.toml"

[tool.ruff.lint]
extend-select = ["DJ"]

[tool.ruff.lint.extend-per-file-ignores]
"*/migrations/*" = ["RUF012"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "parents"
